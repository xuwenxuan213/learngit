现在总结⼀一下今天学的两点内容：
初始化⼀一个Git仓库，使⽤用
git init
命令。
添加⽂文件到Git仓库，分两步：
•
第⼀一步，使⽤用命令
git add
 ，注意，可反复多次使⽤用，添加多个⽂文件；
•
第⼆二步，使⽤用命令
git commit
，完成。

git add file_name

然后运行：

git diff --cached file_name

可以看到git diff的描述。

⼩小结
•
要随时掌握⼯工作区的状态，使⽤用
git status
命令。
•
如果
git status
告诉你有⽂文件被修改过，⽤用
git diff
可以查看修改内容。

⼩小结
现在总结⼀一下：
•
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使⽤用命
令
git reset --hard commit_id
。
Git
教程
 By 
廖雪峰
整理、排版：
numbbbbb
•
穿梭前，⽤用
git log
可以查看提交历史，以便确定要回退到哪个版本。
•
要重返

暂存区是Git⾮非常重要的概念，弄明⽩白了暂存区，就弄明⽩白了Git的很多操作到底干了什么。
没弄明⽩白暂存区是怎么回事的童鞋，请向上滚动⻚页⾯面，再看⼀一次未来，⽤用
git reflog
查看命令历史，以便确定要回到未来的哪个版本。

你⼜又理解了Git是如何跟踪修改的，每次修改，如果不add到暂存区，那就不会加⼊入
到commit中

当你改乱了⼯工作区某个⽂文件的内容，想直接丢弃⼯工作区的修改时，⽤用命令
git 
checkout -- file
。
场景2：当你不但改乱了⼯工作区某个⽂文件的内容，还添加到了暂存区时，想丢弃修改，分两
步，第⼀一步⽤用命令
git reset HEAD file
，就回到了场景1，第⼆二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考
版本回退
⼀一节，不
过前提是没有推送到远程库。
